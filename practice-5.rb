Timeクラス
・日付、時刻を表現するクラス
・オブジェクトを生成してから使う

----------- メソッドの呼び出し方 ----------
・インスタンスメソッド
1. クラス名.new でオブジェクトを生成して変数に保存
2. オブジェクトを保存した変数名.メソッド名でメソッド実行

hensu = Time.new  
# => 2022-02-22 21:50:09
hensu.year        
# => 2022


----------- Timeオブジェクトを実体化させる(インスタンスを生成する) ----------
・現在日時のTimeオブジェクトを生成する(重要)
Time.new

・架空日時のTimeオブジェクトを生成する
Time.local(年,月,日,時,分,秒)

jikan = Time.new
# => 2020-10-29 21:54:04 +0900  ...教材の時間
jikan2 = Time.local(1999,12,31,23,59,59)
# => 1999-12-31 23:59:59 +0900


----------- 時刻の演算 ----------
+ 秒 ...時刻から指定の秒数を足す
jikan + 3600 
# => 2020-10-29 22:54:04 +0900

- 秒 ...時刻から指定の秒数を引く
jikan - 3600 
# => 2020-10-29 20:54:04 +0900

Timeオブジェクト - Timeオブジェクト ...秒差を計算する
jikan - jikan2
657323645.9696974

----------- 時刻の書式表示 ----------
Timeオブジェクト.strftime(フォーマット)
フォーマット例)
"%Y年%m月%d日 %H時%M分%S秒"
"%Y/%m/%d %H:%M:%S"

jikan = Time.new
jikan.strftime("%Y年%m月%d日 %H:%M")
# => "2020年10月29日 21:54"


----------- Timeクラスのインスタンスメソッド ----------
時刻.hour
時刻.min
時刻.sec

時刻.year
時刻.mon
時刻.day


----------- Timeクラス ----------
obj = Time.new
obj.hour

----------- 文字列クラス ----------
obj = String.new("abcde")  # str = "abcde"と意味は同じ
obj.upcase

# どちらにせよオブジェクトを生成してからメソッドを使っている



----------- 演習問題 ----------
# 1
以下のコードを実行したときの出力として正しいものを選択してください。
p Time.now + 200.0

出力結果:  現在の日付・時刻から200秒後の日付・時刻が表示される

# 2
以下のような出力になるコードがあります。「○○○○○」に入る適切な記述を選択してください。
t = Time.local(1988, 12, 23)
puts 「○○○○○」

出力結果: 1988/12

「○○○○○」 = t.strftime("%Y/%m")
# %y は西暦の下二桁
# %M は分

# 3
以下のコードを実行したときの結果として正しいものを選択してください。
t1 = Time.local(2020, 1, 1, 0, 0)
t2 = Time.local(2020, 1, 1, 1, 0)
p t2 - t1

出力結果: 3600.0
# 秒数で表示される

# 4
以下のコードを実行したときの結果として正しいものを選択してください。
t = Time.mktime(1998, 9, 20, 00, 00)
puts t.strftime("%Y/%M")

出力結果: 1998/00